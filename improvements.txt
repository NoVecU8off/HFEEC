Текущие проблемы и решения:

1. Проблема: Неполная настройка RSS
    - Код выполняет базовую маршрутизацию по портам назначения

    Решение:
        - Настроить RSS Flow Director для распределения данных по очередям соответственно данным пакета
        или
        - Настроить кастомный RSS-ключ для распределения данных по очередям


2. Проблема: Неоптимальная работа с логическими ядрами CPU
    - Код распределяет потоки по всем логическим ядрам
    - Логические ядра одного физического ядра конкурируют за ресурсы
    - Включение ядра 0, часто занятого системными процессами
    
    Решение:
        - Фильтровать список ядер для использования только первого логического ядра из каждой пары
        - Исключить ядро 0 из списка используемых ядер
        - Создать функцию выбора оптимальных ядер для биржевых систем
        - Добавить настройку процессорных масок в аргументах инициализации EAL
        - Учитывать частоту и нагрузку ядер при распределении (некоторые процессоры имеют "performance cores")

3. Проблема: Отсутствие NUMA-оптимизации
    - Везде используется socket_id = -1 (любой сокет)
    - Нет определения NUMA-узла для сетевой карты
    - Потоки могут быть назначены на ядра из разных NUMA-узлов
    
    Решение:
        - Добавить определение NUMA-узла через rte_eth_dev_socket_id()
        - Создавать пулы памяти на том же NUMA-узле (локальная память)
        - Настраивать очереди с правильным socket_id
        - Привязывать потоки к ядрам на том же NUMA-узле, где находится NIC
        - Добавить проверку корректного NUMA размещения при запуске
        - Использовать NUMA-специфичные аллокации для всех внутренних буферов

4. Проблема: Неоптимальная работа с буферами
    - Нет выравнивания буферов для оптимизации кэша
    - Есть лишнее копирование данных при создании PacketData
    - Не используются возможности PMD (Poll Mode Driver) для оптимизации
    
    Решение:
        - Добавить выравнивание буферов (cache-line alignment) через #[repr(align(64))]
        - Оптимизировать zero-copy обработку для уменьшения копирования данных
        - Использовать DPDK-специфичные функции для оптимизации размещения буферов
        - Внедрить стратегию повторного использования буферов (buffer recycling)
        - Использовать huge pages для всех выделений памяти
        - Применить batch-обработку для всех операций с данными

5. Проблема: Отсутствие профилирования производительности
    - Нет метрик для измерения пропускной способности и латентности
    - Невозможно определить узкие места без измерений
    
    Решение:
        - Добавить сбор метрик (пакеты/сек, байты/сек, задержки обработки)
        - Добавить периодический вывод статистики с использованием встроенных DPDK функций
        - Реализовать механизм профилирования критических участков кода
        - Использовать аппаратные счетчики производительности (PMC)
        - Интегрировать с системами мониторинга (экспорт метрик в Prometheus)
        - Добавить гистограммы латентности для анализа P99/P99.9 задержек

6. Проблема: Неоптимальное использование аппаратных возможностей NIC
    - Не используются аппаратные функции чекссумирования
    - Отсутствует поддержка hardware timestamp для измерения точной латентности
    - Не используются аппаратные offload возможности
    
    Решение:
        - Включить аппаратное вычисление контрольных сумм через mbuf->ol_flags
        - Использовать hardware timestamp для более точного измерения латентности
        - Настроить TX и RX offload flags для максимальной производительности
        - Использовать Flow Director для аппаратной фильтрации пакетов
        - Настроить размеры Jumbo Frames если биржевые данные требуют больших пакетов
